# Generated by Django 5.1.7 on 2025-03-17 12:13

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('crimes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, srid=4326)),
                ('radius', models.FloatField(help_text='Radius in kilometers')),
                ('time_window', models.IntegerField(default=24, help_text='Time window in hours')),
                ('is_active', models.BooleanField(default=True)),
                ('notification_methods', models.JSONField(default=dict, help_text="E.g., {'email': true, 'sms': false, 'push': true}")),
                ('total_notifications', models.IntegerField(default=0)),
                ('last_notified', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crime_types', models.ManyToManyField(blank=True, related_name='alerts', to='crimes.crimecategory')),
                ('districts', models.ManyToManyField(blank=True, related_name='alerts', to='crimes.district')),
                ('neighborhoods', models.ManyToManyField(blank=True, related_name='alerts', to='crimes.neighborhood')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('crime_data', models.JSONField(default=dict)),
                ('notification_type', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('read', 'Read')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='crime_alerts.alert')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('push_enabled', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('frequency', models.CharField(choices=[('immediately', 'Immediately'), ('hourly', 'Hourly digest'), ('daily', 'Daily digest'), ('weekly', 'Weekly digest')], default='immediately', max_length=20)),
                ('min_severity', models.IntegerField(default=1, help_text='Minimum severity level (1-10)')),
                ('max_daily_notifications', models.IntegerField(default=10)),
                ('crime_type_preferences', models.JSONField(default=dict, help_text="E.g., {'assault': true, 'theft': false}")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PublicSafetyAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('area', django.contrib.gis.db.models.fields.PolygonField(blank=True, geography=True, null=True, srid=4326)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_public_alerts', to=settings.AUTH_USER_MODEL)),
                ('crime_types', models.ManyToManyField(blank=True, related_name='public_alerts', to='crimes.crimecategory')),
                ('districts', models.ManyToManyField(blank=True, related_name='public_alerts', to='crimes.district')),
                ('neighborhoods', models.ManyToManyField(blank=True, related_name='public_alerts', to='crimes.neighborhood')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
