# Generated by Django 5.1.7 on 2025-03-17 12:13

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('crimes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PredictionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('algorithm_type', models.CharField(max_length=100)),
                ('parameters', models.JSONField(default=dict)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('version', models.CharField(max_length=50)),
                ('trained_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Prediction models',
                'ordering': ['-trained_date'],
            },
        ),
        migrations.CreateModel(
            name='DemographicCorrelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('demographic_factor', models.CharField(max_length=100)),
                ('correlation_coefficient', models.FloatField()),
                ('p_value', models.FloatField()),
                ('methodology', models.TextField()),
                ('time_period', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crime_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demographic_correlations', to='crimes.crimecategory')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demographic_correlations', to='crimes.district')),
                ('neighborhood', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demographic_correlations', to='crimes.neighborhood')),
            ],
            options={
                'verbose_name_plural': 'Demographic correlations',
                'ordering': ['-correlation_coefficient'],
            },
        ),
        migrations.CreateModel(
            name='HotspotZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('boundary', django.contrib.gis.db.models.fields.PolygonField(geography=True, srid=4326)),
                ('intensity', models.FloatField(help_text='Crime intensity score (0-100)')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crime_types', models.ManyToManyField(related_name='hotspots', to='crimes.crimecategory')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hotspots', to='crimes.district')),
                ('neighborhood', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hotspots', to='crimes.neighborhood')),
            ],
            options={
                'verbose_name_plural': 'Hotspot zones',
                'ordering': ['-intensity', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatternAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('analysis_type', models.CharField(max_length=50)),
                ('parameters', models.JSONField(default=dict)),
                ('results', models.JSONField(default=dict)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to=settings.AUTH_USER_MODEL)),
                ('crime_types', models.ManyToManyField(related_name='pattern_analyses', to='crimes.crimecategory')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pattern_analyses', to='crimes.district')),
                ('neighborhood', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pattern_analyses', to='crimes.neighborhood')),
            ],
            options={
                'verbose_name_plural': 'Pattern analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CrimePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, srid=4326)),
                ('prediction_date', models.DateField()),
                ('confidence', models.FloatField(help_text='Confidence score (0-100)')),
                ('features', models.JSONField(default=dict, help_text='Features used for prediction')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crime_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='crimes.crimecategory')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='predictions', to='crimes.district')),
                ('neighborhood', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='predictions', to='crimes.neighborhood')),
                ('prediction_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='crime_analytics.predictionmodel')),
            ],
            options={
                'verbose_name_plural': 'Crime predictions',
                'ordering': ['-prediction_date', '-confidence'],
            },
        ),
    ]
